# Virtual Host Preseed
# Based on: https://www.debian.org/releases/trixie/example-preseed.txt

# Locale & keyboard
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us

# Network
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string debian-13-vhost
d-i netcfg/get_domain string lab.internal
d-i netcfg/hostname string debian-13-vhost
netcfg netcfg/get_domain string lab.internal

# Use non-free firmware
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/protocol string https
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# FIXME: Do we care about clear text?
# Root password, either in clear text
d-i passwd/root-password password toor
d-i passwd/root-password-again password toor
# or encrypted using a crypt(3)  hash.
#d-i passwd/root-password-crypted password [crypt(3) hash]

# Setup automation user
d-i passwd/user-fullname string Automation User
d-i passwd/username string automation

# Setup automation user password (we'll change this later)
# FIXME: Do we care about clear text?
d-i passwd/user-password password noitamotua
d-i passwd/user-password-again password noitamotua
# or encrypted using a crypt(3) hash.
#d-i passwd/user-password-crypted password [crypt(3) hash]

# Configure time
d-i clock-setup/utc boolean true
d-i time/zone string US/Central
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string pool.ntp.org

d-i partman-auto/disk string /dev/sda

d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Custom recipe
# 512 MB EFI partition
d-i partman-auto/expert_recipe string \
        efi-boot-lvm-root :: \
              512 1024 1024 fat32 \ # EFI Partition
                      method{ efi } \
                      format{ } \
                      label{ ESP } \
                      use_filesystem{ } \
                      filesystem{ fat32 } \
                      mountpoint{ /boot/efi } \
                      device{ /dev/sda } \
              . \
              1024 1024 1024 ext4 \ # BOOT
                      $primary{ } \
                      $bootable{ } \
                      method{ format } \
                      format{ } \
                      label{ BOOT } \
                      use_filesystem{ } \
                      filesystem{ ext4 } \
                      mountpoint{ /boot } \
                      device{ /dev/sda } \
              . \
              122880 122880 122880 $default_filesystem \ # VG
                      $defaultignore{ } \
                      method{ lvm } \
                      device{ /dev/sda } \
                      vg_name{ debian-vg } \
                      label{ ROOT_LVM } \
              . \
              30720 30720 30720 ext4 \ # ROOT LV
                      $lvmok{} \
                      lv_name{ root } \
                      in_vg{ debian-vg } \
                      method{ format } \
                      format{ } \
                      use_filesystem{ } \
                      filesystem{ ext4 } \
                      mountpoint{ / } \
              . \
              15360 15360 15360 ext4 \ # VAR LV
                      $lvmok{} \
                      lv_name{ var } \
                      in_vg{ debian-vg } \
                      method{ format } \
                      format{ } \
                      use_filesystem{ } \
                      filesystem{ ext4 } \
                      mountpoint{ /var } \
              . \
              15360 15360 15360 ext4 \ # VAR-LOG LV
                      $lvmok{} \
                      lv_name{ var-log } \
                      in_vg{ debian-vg } \
                      method{ format } \
                      format{ } \
                      use_filesystem{ } \
                      filesystem{ ext4 } \
                      mountpoint{ /var/log } \
              . \
              5120 5120 5120 ext4 \ # TMP LV
                      $lvmok{} \
                      lv_name{ tmp } \
                      in_vg{ debian-vg } \
                      method{ format } \
                      format{ } \
                      use_filesystem{ } \
                      filesystem{ ext4 } \
                      mountpoint{ /tmp } \
              . \
              1 1 -1 \	# Space for ZFS partition
                      method{ keep } \
              32768 32768 32768 linux-swap \ # Swap partition @ end
	              method{ swap } \
		      format{ } \
		      label{ SWAP } \
	      .

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
d-i partman-efi/non_efi_system boolean true

# Ensure the partition table is GPT - this is required for EFI
d-i partman-partitioning/choose_label select gpt
d-i partman-partitioning/default_label string gpt

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
d-i partman/mount_style select uuid

# FIXME:
# The kernel image (meta) package to be installed; "none" can be used if no
# kernel is to be installed.
d-i base-installer/kernel/image string linux-image-amd64

d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/disable-cdrom-entries boolean true
d-i apt-setup/use_mirror boolean true
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org

# FIXME: We want to figure out how to install debian
### Package selection
#tasksel tasksel/first multiselect standard, web-server, kde-desktop
d-i tasksel/first multiselect SSH server, standard system utilities

# Or choose to not get the tasksel dialog displayed at all (and don't install
# any packages):
#d-i pkgsel/run_tasksel boolean false

# Individual additional packages to install
#d-i pkgsel/include string openssh-server build-essential
# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
#d-i pkgsel/upgrade select none

# You can choose, if your system will report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and should be included on the first DVD.
#popularity-contest popularity-contest/participate boolean false

### Boot loader installation
# Grub is the boot loader (for x86).

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev  string /dev/sda

# FIXME: Remove after done
# Avoid that last message about the install being complete.
# d-i finish-install/reboot_in_progress note

### Preseeding other packages
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file

# FIXME: Clean up
# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# FIXME: Cleanup
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.

# FIXME: We probably want to hijack this for ansible
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh

